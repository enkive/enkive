<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- This file uses Spring Security's LDAP authentication with slight customization 
		for Enkive. Spring Security supports a large number of LDAP schema variations, 
		the details of which are too extensive to include here. Please see the Spring 
		Security documentation at: http://static.springsource.org/spring-security/site/docs/3.1.x/reference/springsecurity-single.html#ldap -->


	<!-- 1. Modify the attribute for your LDAP configuration. -->

	<ldap-server url="ldap://10.1.1.55:389/dc=linuxbox,dc=com" />


	<!-- 2. In the LdapUserContextMapper bean, set the LdapEmailAddressAttributeIds 
		property to the (or a comma-separated list of) attributes that contain email 
		addresses (e.g., "mail,email") that are contained in the user entry. -->

	<b:bean id="LdapUserContextMapper"
		class="com.linuxbox.enkive.authentication.ldap.EnkiveLdapUserDetailsContextMapper"
		scope="singleton">
		<b:property name="LdapEmailAddressAttributeIds" value="mail,zimbraMailDeliveryAddress" />
	</b:bean>


	<!-- 3. Do not alter user-context-mapper-ref. Change user-dn-pattern and 
		group-search-base as appropriate or change the technique used, using the 
		documentation link above. -->

	<authentication-manager alias="authenticationManager">
		<ldap-authentication-provider
			user-context-mapper-ref="LdapUserContextMapper" user-dn-pattern="uid={0},ou=people"
			group-search-base="ou=EnkiveRoles,ou=groups" />
	</authentication-manager>

</b:beans>
