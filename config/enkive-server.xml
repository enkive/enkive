<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-init-method="startup" default-destroy-method="shutdown">

	<import resource="enkive-properties.xml" />
	<import resource="resources/*-service.xml" />


	<!-- AUTHENTICATION SERVICE OPTIONS; CHOOSE ONE -->

	<import resource="resources/authentication/authentication-service.xml" />

	<!-- <import resource="resources/authentication/file-authentication-service.xml" 
		/> <import resource="resources/authentication/ldap-authentication-service.xml" 
		/> -->

	<bean id="EnkiveFilters" class="com.linuxbox.enkive.filter.EnkiveFiltersBean" />

	<bean id="DocLockService" class="com.linuxbox.util.lockservice.mongodb.MongoLockService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.lockservice.db.name}" />
		<constructor-arg value="lockService" />
	</bean>

	<bean id="IndexerQueueService"
		class="com.linuxbox.util.queueservice.mongodb.MongoQueueService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.queueservice.db.name}" />
		<constructor-arg value="queueService" />
	</bean>

	<bean id="ThreadPoolServerConfiguration"
		class="com.linuxbox.enkive.server.config.ThreadPoolServerConfiguration">
		<constructor-arg type="int"
			value="${enkive.threadServer.queueSize}" />
		<constructor-arg type="int"
			value="${enkive.threadServer.corePoolSize}" />
		<constructor-arg type="int"
			value="${enkive.threadServer.maxPoolSize}" />
		<constructor-arg type="long"
			value="${enkive.threadServer.keepAliveTime}" />
	</bean>

	<bean id="PostfixFilterServer" class="com.linuxbox.enkive.server.PostfixFilterServer"
		init-method="startServer" destroy-method="shutdownServer">
		<constructor-arg type="int" value="${enkive.server.postfix.port}" />
		<constructor-arg ref="ThreadPoolServerConfiguration" />
	</bean>

	<bean id="ConversionServer" class="com.linuxbox.enkive.server.ConversionServer"
		init-method="startServer" destroy-method="shutdownServer">
		<constructor-arg type="int"
			value="${enkive.server.conversion.port}" />
		<constructor-arg ref="ThreadPoolServerConfiguration" />
	</bean>

	<bean id="PostfixFilterProcessor"
		class="com.linuxbox.enkive.mailprocessor.processors.PostfixFilterProcessor"
		scope="prototype">
		<property name="archiver" ref="MessageArchivingService" />
		<property name="auditService" ref="AuditLogService" />
		<property name="enkiveFilters" ref="EnkiveFilters" />
		<property name="jmxEnabled" value="${enkive.jmx.enabled}" />
	</bean>

	<bean id="ConversionProcessor"
		class="com.linuxbox.enkive.mailprocessor.processors.MailDirProcessor"
		scope="prototype">
		<property name="archiver" ref="MessageArchivingService" />
		<property name="auditService" ref="AuditLogService" />
		<property name="enkiveFilters" ref="EnkiveFilters" />
		<property name="jmxEnabled" value="${enkive.jmx.enabled}" />
	</bean>

	<bean id="AuditLogService"
		class="com.linuxbox.enkive.audit.mongodb.PermissionsEnforcingMongoAuditService">
		<constructor-arg ref="PermissionService" />
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.auditlogservice.db.name}" />
		<constructor-arg value="auditLog" />
	</bean>

	<bean id="AuthenticationService"
		class="com.linuxbox.enkive.authentication.SpringSecurityAuthenticationService">
	</bean>

	<bean id="PermissionService"
		class="com.linuxbox.enkive.permissions.SpringContextPermissionService">
		<property name="messagePermissionService" ref="MessagePermissionsService" />
	</bean>

	<bean id="MessagePermissionsService"
		class="com.linuxbox.enkive.permissions.message.MongoMessagePermissionsService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
	</bean>

	<!-- Scheduled Actions -->

	<bean name="MessageRetentionPolicy"
		class="com.linuxbox.enkive.message.retention.MessageRetentionPolicy">
		<property name="retentionPolicyCriteria">
			<map>
				<entry key="retentionPeriod" value="${enkive.message.retentionPeriod}" />
				<entry key="limit" value="10" />
			</map>
		</property>
	</bean>

	<bean name="MessageRetentionPolicyEnforcer"
		class="com.linuxbox.enkive.message.retention.mongodb.MongodbMessageRetentionPolicyEnforcer">
		<property name="searchService" ref="SystemMessageSearchService" />
		<property name="retentionPolicy" ref="MessageRetentionPolicy" />
		<property name="messageArchivingService" ref="MessageArchivingService" />
	</bean>

	<bean name="MessageRetentionJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="MessageRetentionPolicyEnforcer" />
		<property name="targetMethod" value="enforceMessageRetentionPolicies" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="MessageRetentionTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="MessageRetentionJob" />
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>

	<bean id="ScheduledJobsBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!-- Uncomment the next line to enable message retention policy and have 
					not enabled IMAP access -->
				<!-- <ref bean="MessageRetentionTrigger" /> -->
				<!-- Uncomment the next line to enable message retention policy and have 
					enabled IMAP Access -->
				<!-- <ref bean="ImapMessageRetentionTrigger" /> -->
				<!-- Uncomment the next line to enable the nightly statistics report -->
				<!-- <ref bean="StatisticsEmailerTrigger" /> -->
			</list>
		</property>
	</bean>

	<!-- Create a Mongo shared by various services; that way if the MongoDB 
		lives on another server or a unique port, that can be configured once. -->

	<bean id="Mongo" class="com.mongodb.Mongo" destroy-method="close">
		<constructor-arg type="java.lang.String" value="${enkive.mongodb.host}" />
		<constructor-arg type="int" value="${enkive.mongodb.port}" />
	</bean>

	<bean id="IndexShardingHelper" class="com.linuxbox.enkive.docstore.AbstractDocStoreService"
		factory-method="createShardingHelper">
		<constructor-arg value="${enkive.docsearch.index.shard.count}" />
	</bean>

	<bean id="ApplicationContextProvider" class="com.linuxbox.util.spring.ApplicationContextProvider" />

	<!-- Makes sure all beans with PostConstruct or PreDestroy annotations get 
		called appropriately -->
	<bean id="CommonAnnotationBeanPostProcessor"
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<!-- Makes sure all beans with Required annotations get set up appropriately -->
	<bean id="RequiredAnnotationBeanPostProcessor"
		class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
</beans>
