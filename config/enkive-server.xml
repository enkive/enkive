<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-init-method="startup" default-destroy-method="shutdown">

	<bean id="DocStoreService"
		class="com.linuxbox.enkive.docstore.mongogrid.MongoGridDocStoreService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.docstore.db.name}" />
		<constructor-arg type="java.lang.String" value="fs" />

		<property name="documentLockingService" ref="DocLockService" />
		<property name="indexerQueueService" ref="IndexerQueueService" />
		<property name="inMemoryLimit" value="${enkive.docstore.buffersize}" />
	</bean>

	<bean id="DocSearchIndexService"
		class="com.linuxbox.enkive.docsearch.indri.IndriDocSearchIndexService">
		<constructor-arg ref="DocStoreService" />
		<constructor-arg ref="ContentAnalyzer" />
		<constructor-arg value="${enkive.docsearch.index.indri.index}" />
		<constructor-arg value="${enkive.docsearch.index.indri.tmp}" />
		<constructor-arg value="${enkive.docsearch.index.indri.repoll}" />

		<property name="indexEnvironmentDocLimit" value="${enkive.docsearch.index.indri.envDocLimit}" />
		<property name="indexEnvironmentRefreshInterval"
			value="${enkive.docsearch.index.indri.indexRefreshingInterval}" />
		<property name="indexEnvironmentMemory" value="${enkive.docsearch.index.indri.memory}" />
		<property name="indexerQueueService" ref="IndexerQueueService" />
		<property name="queryEnvironmentRefreshInterval"
			value="${enkive.docsearch.index.indri.queryRefreshingInterval}" />
		<property name="documentLockingService" ref="DocLockService" />
	</bean>

	<bean id="DocSearchQueryService"
		class="com.linuxbox.enkive.docsearch.indri.IndriDocSearchQueryService">
		<property name="indexPaths" value="${enkive.docsearch.query.indri.indexPaths}" />
		<property name="indexServers" value="${enkive.docsearch.query.indri.indexServers}" />
		<property name="queryEnvironmentRefreshInterval"
			value="${enkive.docsearch.query.indri.refreshInterval}" />
	</bean>

	<bean id="ContentAnalyzer"
		class="com.linuxbox.enkive.docsearch.contentanalyzer.tika.TikaContentAnalyzer" />

	<bean id="DocLockService" class="com.linuxbox.util.lockservice.mongodb.MongoLockService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.lockservice.db.name}" />
		<constructor-arg value="lockService" />
	</bean>

	<bean id="IndexerQueueService"
		class="com.linuxbox.util.queueservice.mongodb.MongoQueueService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.queueservice.db.name}" />
		<constructor-arg value="queueService" />
	</bean>

	<bean id="AuditService" class="com.linuxbox.enkive.audit.ConsoleAuditService">
		<!-- empty for now -->
	</bean>

	<bean id="MessageArchivingService"
		class="com.linuxbox.enkive.archiver.mongodb.MongoArchivingService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String" value="email-messages" />
		<property name="docStoreService" ref="DocStoreService" />
	</bean>

	<bean id="ThreadPoolServerConfiguration"
		class="com.linuxbox.enkive.server.config.ThreadPoolServerConfiguration">
	</bean>

	<bean id="PostfixFilterServer"
		class="com.linuxbox.enkive.server.PostfixFilterServer" init-method="startServer" destroy-method="shutdownServer">
		<constructor-arg ref="MessageArchivingService" />
		<constructor-arg ref="AuditService" />
		<constructor-arg type="int" value="2525" />
		<constructor-arg ref="ThreadPoolServerConfiguration" />
	</bean>

	<!-- Create a Mongo shared by various services; that way if the MongoDB 
		lives on another server or a unique port, that can be configured once. -->

	<bean id="Mongo" class="com.mongodb.Mongo" destroy-method="close">
		<!-- empty for now -->
	</bean>
</beans>