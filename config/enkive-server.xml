<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-init-method="startup" default-destroy-method="shutdown">

	<import resource="enkive-properties.xml" />

	<bean id="EnkiveFilters" class="com.linuxbox.enkive.filter.EnkiveFiltersBean">
	</bean>

	<bean id="DocStoreService"
		class="com.linuxbox.enkive.docstore.mongogrid.MongoGridDocStoreService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.docstore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.docstore.fs.collection.name}" />

		<property name="documentLockingService" ref="DocLockService" />
		<property name="indexerQueueService" ref="IndexerQueueService" />
		<property name="inMemoryLimit" value="${enkive.docstore.buffersize}" />
	</bean>

	<bean id="DocSearchIndexService"
		class="com.linuxbox.enkive.docsearch.indri.IndriDocSearchIndexService">
		<constructor-arg ref="DocStoreService" />
		<constructor-arg ref="ContentAnalyzer" />
		<constructor-arg value="${enkive.docsearch.index.indri.index}" />
		<constructor-arg value="${enkive.docsearch.index.indri.tmp}" />
		<constructor-arg value="${enkive.docsearch.index.indri.repoll.ms}" />

		<property name="indexEnvironmentDocLimit" value="${enkive.docsearch.index.indri.envDocLimit}" />
		<property name="indexEnvironmentRefreshInterval"
			value="${enkive.docsearch.index.indri.indexRefreshingInterval}" />
		<property name="indexEnvironmentMemory" value="${enkive.docsearch.index.indri.memory}" />
		<property name="indexerQueueService" ref="IndexerQueueService" />
		<property name="queryEnvironmentRefreshInterval"
			value="${enkive.docsearch.index.indri.queryRefreshingInterval}" />
		<property name="documentLockingService" ref="DocLockService" />

		<!-- control index sharding -->
		<property name="shardingHelper" ref="IndexShardingHelper" />
		<!-- NOTE: to turn off indexing, change the value below from 0 to -1 -->
		<property name="shardIndex" value="0" />
	</bean>

	<bean id="DocSearchQueryService"
		class="com.linuxbox.enkive.docsearch.indri.IndriDocSearchQueryService">
		<property name="indexPathsString" value="${enkive.docsearch.query.indri.indexPaths}" />
		<property name="indexServersString" value="${enkive.docsearch.query.indri.indexServers}" />
		<property name="queryEnvironmentRefreshInterval"
			value="${enkive.docsearch.query.indri.refreshInterval}" />
	</bean>

	<bean id="ContentAnalyzer"
		class="com.linuxbox.enkive.docsearch.contentanalyzer.tika.TikaContentAnalyzer" />

	<bean id="DocLockService" class="com.linuxbox.util.lockservice.mongodb.MongoLockService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.lockservice.db.name}" />
		<constructor-arg value="lockService" />
	</bean>

	<bean id="IndexerQueueService"
		class="com.linuxbox.util.queueservice.mongodb.MongoQueueService">
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.queueservice.db.name}" />
		<constructor-arg value="queueService" />
	</bean>

	<bean id="MessageArchivingService"
		class="com.linuxbox.enkive.archiver.ThreadSafeMessageArchivingService">
		<property name="lockService" ref="DocLockService" />
		<property name="messageArchivingService" ref="MongoMessageArchivingService" />
	</bean>

	<bean id="MongoMessageArchivingService"
		class="com.linuxbox.enkive.archiver.mongodb.MongoArchivingService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
		<property name="auditService" ref="AuditLogService" />
		<property name="docStoreService" ref="DocStoreService" />
		<property name="emergencySaveRoot" value="${enkive.messagestore.emergencysave.root}" />
	</bean>

	<bean id="MessageRetrieverService"
		class="com.linuxbox.enkive.retriever.PermissionsEnforcingMessageRetrieverService">
		<property name="permService" ref="PermissionService" />
		<property name="retrieverService" ref="MongoMessageRetrieverService" />
		<property name="auditService" ref="AuditLogService" />
	</bean>

	<bean id="MongoMessageRetrieverService"
		class="com.linuxbox.enkive.retriever.mongodb.MongoRetrieverService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
		<property name="docStoreService" ref="DocStoreService" />
		<property name="auditService" ref="AuditLogService" />
	</bean>

	<bean id="MessageSearchService"
		class="com.linuxbox.enkive.message.search.TaskPoolAsyncMessageSearchService">
		<constructor-arg value="${enkive.messageSearch.corePoolSize}" />
		<constructor-arg value="${enkive.messageSearch.maxPoolSize}" />
		<constructor-arg value="${enkive.messageSearch.keepAliveTime}" />
		<property name="authenticationService" ref="AuthenticationService" />
		<property name="workspaceService" ref="WorkspaceService" />
		<property name="messageSearchService" ref="RetentionPolicyEnforcingMessageSearchService" />
	</bean>

	<bean id="RetentionPolicyEnforcingMessageSearchService"
		class="com.linuxbox.enkive.message.search.RetentionPolicyEnforcingMessageSearchService">
		<property name="messageRetentionPolicy" ref="MessageRetentionPolicy" />
		<property name="messageSearchService" ref="PermissionsEnforcingMessageSearchService" />
	</bean>

	<bean id="PermissionsEnforcingMessageSearchService"
		class="com.linuxbox.enkive.message.search.PermissionsEnforcingAuditLoggingMessageSearchService">
		<property name="permService" ref="PermissionService" />
		<property name="authenticationService" ref="AuthenticationService" />
		<property name="messageSearchService" ref="SystemMessageSearchService" />
		<property name="auditService" ref="AuditLogService" />
	</bean>

	<bean id="SystemMessageSearchService"
		class="com.linuxbox.enkive.message.search.mongodb.MongoMessageSearchService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
		<property name="docSearchService" ref="DocSearchQueryService" />
	</bean>

	<bean id="ThreadPoolServerConfiguration"
		class="com.linuxbox.enkive.server.config.ThreadPoolServerConfiguration">
		<constructor-arg type="int"
			value="${enkive.threadServer.queueSize}" />
		<constructor-arg type="int"
			value="${enkive.threadServer.corePoolSize}" />
		<constructor-arg type="int"
			value="${enkive.threadServer.maxPoolSize}" />
		<constructor-arg type="long"
			value="${enkive.threadServer.keepAliveTime}" />
	</bean>

	<bean id="PostfixFilterServer" class="com.linuxbox.enkive.server.PostfixFilterServer"
		init-method="startServer" destroy-method="shutdownServer">
		<constructor-arg type="int" value="${enkive.server.postfix.port}" />
		<constructor-arg ref="ThreadPoolServerConfiguration" />
	</bean>

	<bean id="ConversionServer" class="com.linuxbox.enkive.server.ConversionServer"
		init-method="startServer" destroy-method="shutdownServer">
		<constructor-arg type="int"
			value="${enkive.server.conversion.port}" />
		<constructor-arg ref="ThreadPoolServerConfiguration" />
	</bean>

	<bean id="PostfixFilterProcessor"
		class="com.linuxbox.enkive.mailprocessor.processors.PostfixFilterProcessor"
		scope="prototype">
		<property name="archiver" ref="MessageArchivingService" />
		<property name="auditService" ref="AuditLogService" />
		<property name="enkiveFilters" ref="EnkiveFilters" />
		<property name="jmxEnabled" value="${enkive.jmx.enabled}" />
	</bean>

	<bean id="ConversionProcessor"
		class="com.linuxbox.enkive.mailprocessor.processors.MailDirProcessor"
		scope="prototype">
		<property name="archiver" ref="MessageArchivingService" />
		<property name="auditService" ref="AuditLogService" />
		<property name="enkiveFilters" ref="EnkiveFilters" />
		<property name="jmxEnabled" value="${enkive.jmx.enabled}" />
	</bean>

	<bean id="AuditLogService"
		class="com.linuxbox.enkive.audit.mongodb.PermissionsEnforcingMongoAuditService">
		<constructor-arg ref="PermissionService" />
		<constructor-arg ref="Mongo" />
		<constructor-arg value="${enkive.queueservice.db.name}" />
		<constructor-arg value="auditLog" />
	</bean>

	<bean id="AuthenticationService"
		class="com.linuxbox.enkive.authentication.SpringSecurityAuthenticationService">
	</bean>

	<bean id="PermissionService"
		class="com.linuxbox.enkive.permissions.SpringContextPermissionService">
		<property name="messagePermissionService" ref="MessagePermissionsService" />
	</bean>

	<bean id="MessagePermissionsService"
		class="com.linuxbox.enkive.permissions.message.MongoMessagePermissionsService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
	</bean>

	<bean id="WorkspaceService"
		class="com.linuxbox.enkive.workspace.PermissionsEnforcingWorkspaceService">
		<property name="authenticationService" ref="AuthenticationService" />
		<property name="workspaceService" ref="MongoWorkspaceService" />
		<property name="permissionService" ref="PermissionService" />
	</bean>


	<bean id="MongoWorkspaceService"
		class="com.linuxbox.enkive.workspace.mongo.MongoWorkspaceService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.workspace.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.workspaces.collection.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.workspace.search.results.collection.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.workspace.search.queries.collection.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.workspace.userWorkspaces.collection.name}" />
	</bean>

	<!-- Scheduled Actions -->

	<bean name="MessageRetentionPolicy"
		class="com.linuxbox.enkive.message.retention.MessageRetentionPolicy">
		<property name="retentionPolicyCriteria">
			<map>
				<entry key="retentionPeriod" value="${enkive.message.retentionPeriod}" />
				<entry key="limit" value="10" />
			</map>
		</property>
	</bean>

	<bean name="MessageRetentionPolicyEnforcer"
		class="com.linuxbox.enkive.message.retention.MessageRetentionPolicyEnforcer">
		<property name="searchService" ref="SystemMessageSearchService" />
		<property name="retentionPolicy" ref="MessageRetentionPolicy" />
		<property name="messageArchivingService" ref="MessageArchivingService" />
	</bean>

	<bean name="MessageRetentionJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="MessageRetentionPolicyEnforcer" />
		<property name="targetMethod" value="enforceMessageRetentionPolicies" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="MessageRetentionTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="MessageRetentionJob" />
		<property name="cronExpression" value="10 * * * * ?" />
	</bean>

	<!-- Statistics Gathering related beans -->
	<bean id="MessageArchiveStatisticsService"
		class="com.linuxbox.enkive.statistics.message.MongoMessageStatisticsService">
		<constructor-arg ref="Mongo" />
		<constructor-arg type="java.lang.String" value="${enkive.messagestore.db.name}" />
		<constructor-arg type="java.lang.String"
			value="${enkive.messagestore.collection.name}" />
	</bean>

	<bean id="StatisticsGatherer" class="com.linuxbox.enkive.statistics.StatisticsGatherer">
		<constructor-arg>
			<map>
				<entry key="MessageArchiveStatisticsService" value-ref="MessageArchiveStatisticsService" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="StatisticsEmailer" class="com.linuxbox.enkive.statistics.StatisticsReportEmailer">
		<constructor-arg ref="StatisticsGatherer" />
		<property name="to" value="lee@linuxbox.com" />
		<property name="from" value="lee@linuxbox.com" />
		<property name="mailHost" value="thunderbeast.private.linuxbox.com" />
	</bean>

	<bean id="StatisticsEmailerJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="StatisticsEmailer" />
		<property name="targetMethod" value="sendReport" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="StatisticsEmailerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="StatisticsEmailerJob" />
		<property name="cronExpression" value="10 * * * * ?" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!-- Uncomment the next line to enable message retention policy -->
				<!-- <ref bean="MessageRetentionTrigger" /> -->
				<ref bean="StatisticsEmailerTrigger" />
			</list>
		</property>
	</bean>

	<!-- Create a Mongo shared by various services; that way if the MongoDB 
		lives on another server or a unique port, that can be configured once. -->

	<bean id="Mongo" class="com.mongodb.Mongo" destroy-method="close">
		<constructor-arg type="java.lang.String" value="localhost" />
	</bean>

	<bean id="IndexShardingHelper" class="com.linuxbox.enkive.docstore.AbstractDocStoreService"
		factory-method="createShardingHelper">
		<constructor-arg value="${enkive.docsearch.index.shard.count}" />
	</bean>

	<bean id="ApplicationContextProvider" class="com.linuxbox.util.spring.ApplicationContextProvider" />
</beans>